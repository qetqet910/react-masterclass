{"version":3,"sources":["api.ts","routes/chart.tsx","routes/price.tsx","routes/coin.tsx","routes/coins.tsx","routes/Router.tsx","App.tsx","index.tsx","theme.tsx"],"names":["COMMON_URL","CoinFetcher","fetch","then","response","json","CoinPrice","CoinID","res","Chart","coinId","useQuery","end","Math","floor","Date","now","start","CoinChart","isLoading","data","console","log","type","series","name","map","price","x","time_close","y","open","toFixed","high","low","close","options","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","labels","style","colors","fontSize","xaxis","axisBorder","axisTicks","plotOptions","candlestick","upward","downward","Anima","keyframes","Container","styled","div","Overview","main","props","theme","blockColor","textColor","Tag","h3","Value","Text","isPositive","checkValue","value","Price","refetchInterval","CoinPriceLoading","CoinPriceData","quotes","USD","market_cap_change_24h","percent_change_30m","percent_change_1h","percent_change_12h","percent_change_24h","Title","h1","accentrColor","Header","header","Main","OverviewItem","OverviewItem2","Description","p","Tabs","Tab","span","isActive","RestedR","Coin","useParams","state","useLocation","chartMatch","useRouteMatch","priceMatch","CoinInfoLoading","CoinInfoData","Loading","Helmet","to","rank","symbol","description","total_supply","max_supply","path","CoinList","ul","li","IMG","img","Load","Coins","slice","item","pathname","id","src","toLowerCase","Router","basename","Global","createGlobalStyle","backgroundColor","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","client","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96270082.chunk.js","sourcesContent":["const COMMON_URL = \"https://api.coinpaprika.com/v1/\"\r\n\r\nexport function CoinFetcher() {\r\n    return fetch(`${COMMON_URL}coins`).then((response) =>\r\n        response.json()\r\n    );\r\n}\r\n\r\nexport function CoinInfo(CoinID: string) {\r\n    return fetch(`${COMMON_URL}coins/${CoinID}`).then((res) => {\r\n        return res.json()\r\n    })\r\n}\r\n\r\nexport function CoinPrice(CoinID: string) {\r\n    return fetch(`${COMMON_URL}tickers/${CoinID}`).then((res) => {\r\n        return res.json()\r\n    })\r\n}\r\n\r\nexport function CoinChart(CoinID: string) {\r\n\r\n    const end = Math.floor(Date.now() / 1000)\r\n    const start = end - 69 * 60 * 24 * 6 * 2\r\n\r\n    return fetch(`${COMMON_URL}coins/${CoinID}/ohlcv/historical?start=${start}&end=${end}`).then((res) => {\r\n        return res.json()\r\n    })\r\n}","import { CoinChart } from \"../api\";\r\nimport { useQuery } from \"react-query\";\r\nimport ApexChart from \"react-apexcharts\";\r\n\r\ninterface IChart {\r\n    coinId: string;\r\n}\r\n\r\ninterface IHistorical {\r\n    time_open: string;\r\n    time_close: string;\r\n    open: number;\r\n    high: number;\r\n    low: number;\r\n    close: number;\r\n    volume: number;\r\n    market_cap: number;\r\n}\r\n\r\nfunction Chart({ coinId }: IChart) {\r\n    const { isLoading, data } = useQuery<IHistorical[]>([\"CoinChart\", coinId], () =>\r\n        CoinChart(coinId)\r\n    );\r\n    console.log(data)\r\n    return (\r\n        <div>\r\n            {isLoading ? (\r\n                \"Loading chart...\"\r\n            ) : (\r\n                <ApexChart\r\n                    type=\"candlestick\"\r\n                    series={[\r\n                        {\r\n                            name: \"Price\",\r\n                            data: data?.map((price) => ({\r\n                                x: price.time_close,\r\n                                y: [\r\n                                    price.open.toFixed(4),\r\n                                    price.high.toFixed(4),\r\n                                    price.low.toFixed(4),\r\n                                    price.close.toFixed(4),\r\n                                ],\r\n                            })),\r\n                        },\r\n                    ]}\r\n                    options={{\r\n                        chart: {\r\n                            type: \"candlestick\",\r\n                            height: 600,\r\n                            width: 500,\r\n                            toolbar: {\r\n                                show: true,\r\n                            },\r\n                            background: \"transparent\",\r\n                        },\r\n                        grid: { show: true },\r\n                        stroke: {\r\n                            curve: \"smooth\",\r\n                            width: 3,\r\n                        },\r\n                        yaxis: {\r\n                            show: true,\r\n                            labels: {\r\n                                show: true,\r\n                                style: {\r\n                                    colors: 'white',\r\n                                    fontSize: '12px'\r\n                                }\r\n                            },\r\n                        },\r\n                        xaxis: {\r\n                            axisBorder: { show: true },\r\n                            axisTicks: { show: true },\r\n                            labels: {\r\n                                show: true,\r\n                                style: {\r\n                                    colors: 'white',\r\n                                    fontSize: '12px'\r\n                                }\r\n                            },\r\n                            type: \"datetime\",\r\n\r\n                        },\r\n                        plotOptions: {\r\n                            candlestick: {\r\n                                colors: {\r\n                                    upward: '#3C90EB',\r\n                                    downward: '#DF7D46'\r\n                                }\r\n                            }\r\n                        },\r\n                    }}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart","import { useQuery } from \"react-query\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { CoinPrice } from \"../api\";\r\n\r\nconst Anima = keyframes`\r\n  0% {\r\n    transform: translateY(10px) rotateY(90deg);\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    transform: none;\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  \r\n  main:first-child {\r\n    animation-delay: 0.15s;\r\n  }\r\n  main:nth-child(2) {\r\n    animation-delay: 0.3s;\r\n  }\r\n  main:nth-child(3) {\r\n    animation-delay: 0.45s;\r\n  }\r\n  main:nth-child(4) {\r\n    animation-delay: 0.6s;\r\n  }\r\n  main:nth-child(5) {\r\n    animation-delay: 0.75s;\r\n  }\r\n  main:last-child {\r\n    animation-delay: 0.9s;\r\n  }\r\n`;\r\n\r\nconst Overview = styled.main`\r\n  width: 100%;\r\n  height: 50px;\r\n  background-color: ${props => props.theme.blockColor};\r\n  box-shadow: 0px 0px 4px ${props => props.theme.textColor};\r\n  display: flex;\r\n  padding: 10px 0px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 15px;\r\n  margin: 10px 20px;\r\n  transform: translateY(-5px);\r\n  opacity: 0;\r\n  animation: ${Anima} 0.5s linear forwards;\r\n`;\r\n\r\nconst Tag = styled.h3`\r\n  width: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  font-size: calc(.25vw + .8em);\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Value = styled.div`\r\n  width: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Text = styled.h3<{ isPositive?: Boolean }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: ${(props) => (props.isPositive ? \"lightgreen\" : \"red\")};\r\n`;\r\n\r\ninterface PriceData {\r\n    id: string;\r\n    name: string;\r\n    symbol: string;\r\n    rank: number;\r\n    circulating_supply: number;\r\n    total_supply: number;\r\n    max_supply: number;\r\n    beta_value: number;\r\n    first_data_at: string;\r\n    last_updated: string;\r\n    quotes: {\r\n        USD: {\r\n            ath_date: string;\r\n            ath_price: number;\r\n            market_cap: number;\r\n            market_cap_change_24h: number;\r\n            percent_change_1h: number;\r\n            percent_change_1y: number;\r\n            percent_change_6h: number;\r\n            percent_change_7d: number;\r\n            percent_change_12h: number;\r\n            percent_change_15m: number;\r\n            percent_change_24h: number;\r\n            percent_change_30d: number;\r\n            percent_change_30m: number;\r\n            percent_from_price_ath: number;\r\n            price: number;\r\n            volume_24h: number;\r\n            volume_24h_change_24h: number;\r\n        };\r\n    };\r\n}\r\n\r\ninterface PriceProps {\r\n    coinId: string;\r\n}\r\n\r\nfunction checkValue(value: number | undefined) {\r\n    if (value) {\r\n        return value > 0;\r\n    }\r\n}\r\n\r\nfunction Price({ coinId }: PriceProps) {\r\n    const { isLoading: CoinPriceLoading, data: CoinPriceData } = useQuery<PriceData>([\"CoinPrice\", coinId], () => CoinPrice(coinId), {\r\n        refetchInterval: 1000\r\n    })\r\n\r\n    return (\r\n        <Container>\r\n            {CoinPriceLoading ? (\r\n                \"Loading Price...\"\r\n            ) : (\r\n                <>\r\n                    <Overview>\r\n                        <Tag>Price </Tag>\r\n                        <Value>\r\n                            <Text isPositive={true}>\r\n                                {CoinPriceData?.quotes.USD.price.toFixed(3)}\r\n                            </Text>\r\n                        </Value>\r\n                    </Overview>\r\n                    <Overview>\r\n                        <Tag> Max Change rate in last 24h</Tag>\r\n                        <Value>\r\n                            <Text\r\n                                isPositive={\r\n                                    checkValue(CoinPriceData?.quotes.USD.market_cap_change_24h) === true\r\n                                }\r\n                            >\r\n                                {CoinPriceData?.quotes.USD.market_cap_change_24h} %\r\n                            </Text>\r\n                        </Value>\r\n                    </Overview>\r\n\r\n                    <Overview>\r\n                        <Tag> Change rate (last 30 Minutes)</Tag>\r\n                        <Value>\r\n                            <Text\r\n                                isPositive={\r\n                                    checkValue(CoinPriceData?.quotes.USD.percent_change_30m) === true\r\n                                }\r\n                            >\r\n                                {CoinPriceData?.quotes.USD.percent_change_30m} %\r\n                            </Text>\r\n                        </Value>\r\n                    </Overview>\r\n\r\n                    <Overview>\r\n                        <Tag> Change rate (last 1 hours)</Tag>\r\n                        <Value>\r\n                            <Text\r\n                                isPositive={\r\n                                    checkValue(CoinPriceData?.quotes.USD.percent_change_1h) === true\r\n                                }\r\n                            >\r\n                                {CoinPriceData?.quotes.USD.percent_change_1h} %\r\n                            </Text>\r\n                        </Value>\r\n                    </Overview>\r\n\r\n                    <Overview>\r\n                        <Tag> Change rate (last 12 hours)</Tag>\r\n                        <Value>\r\n                            <Text\r\n                                isPositive={\r\n                                    checkValue(CoinPriceData?.quotes.USD.percent_change_12h) === true\r\n                                }\r\n                            >\r\n                                {CoinPriceData?.quotes.USD.percent_change_12h} %\r\n                            </Text>\r\n                        </Value>\r\n                    </Overview>\r\n\r\n                    <Overview>\r\n                        <Tag> Change rate (last 24 hours)</Tag>\r\n                        <Value>\r\n                            <Text\r\n                                isPositive={\r\n                                    checkValue(CoinPriceData?.quotes.USD.percent_change_24h) === true\r\n                                }\r\n                            >\r\n                                {CoinPriceData?.quotes.USD.percent_change_24h} %\r\n                            </Text>\r\n                        </Value>\r\n                    </Overview>\r\n                </>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Price;","import styled from \"styled-components\"\r\nimport { useLocation, useParams, useRouteMatch } from \"react-router\"\r\nimport { Switch, Route, Link } from 'react-router-dom';\r\nimport Chart from \"./chart\";\r\nimport Price from \"./price\";\r\nimport { CoinInfo, CoinPrice } from \"../api\";\r\nimport { useQuery } from \"react-query\";\r\nimport Helmet from \"react-helmet\"\r\n\r\n\r\nconst Title = styled.h1`\r\n    display: inline;\r\n    color: ${props => props.theme.accentrColor};\r\n    font-weight: bold;\r\n    font-size: calc(1vw + 1.5em);\r\n`\r\nconst Container = styled.div`\r\n`\r\n\r\nconst Header = styled.header`\r\n    width: 100%;\r\n    height: calc(1vw + 2.6em);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background: ${props => props.theme.textColor};\r\n    box-shadow: 0px -10px 30px ${props => props.theme.textColor};\r\n    color: black;\r\n`\r\nconst Main = styled.main`\r\n    max-width: 600px;\r\n    margin 0 auto;\r\n    width: 100%;\r\n    padding: 20px 0px;\r\n    .apexcharts-tooltip {\r\n        background: #fff;\r\n        color: orange;\r\n    }\r\n    .apexcharts-toolbar{\r\n        background: transparent;\r\n        color: orange;\r\n    }\r\n`\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: ${props => props.theme.blockColor};\r\n  padding: 10px 20px;\r\n  border-radius: 6px;\r\n  box-shadow: 0px 0px 4px ${props => props.theme.textColor};\r\n  margin: 20px;\r\n`;\r\n\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n\r\nconst OverviewItem2 = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: auto 0px;\r\n  span:first-child {\r\n    font-size: 32px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n  a{\r\n    color: white;\r\n    calc(1vw + 1em);\r\n    font-weight: bold;\r\n    transition: all .25s;\r\n    text-transform: uppercase;\r\n    &:hover{\r\n        color: ${props => props.theme.accentrColor}\r\n    }\r\n  }\r\n`;\r\n\r\nconst Description = styled.p`\r\n  display: block;\r\n  margin: 20px;\r\n  padding: 16px 20px;\r\n  border-radius: 6px;\r\n  background-color: ${props => props.theme.blockColor};\r\n  box-shadow: 0px 0px 4px ${props => props.theme.textColor};\r\n  `;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 20px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: calc(1vw + .5em);\r\n  font-weight: 400;\r\n  background-color: ${props => props.theme.blockColor};\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  font-weight: bold;\r\n  box-shadow: 0px 0px 4px ${props => props.theme.textColor};\r\n  a {\r\n    display: block;\r\n    color: ${props => props.isActive ? props.theme.accentrColor : props.theme.textColor}\r\n}\r\n`;\r\n\r\nconst RestedR = styled.div`\r\n  margin: 20px\r\n`\r\ninterface Params {\r\n    coinId: string\r\n}\r\n\r\ninterface toState {\r\n    name: string\r\n}\r\n\r\ninterface InfoData {\r\n    id: string;\r\n    name: string;\r\n    symbol: string;\r\n    rank: number;\r\n    is_new: boolean;\r\n    is_active: boolean;\r\n    type: string;\r\n    description: string;\r\n    message: string;\r\n    open_source: boolean;\r\n    started_at: string;\r\n    development_status: string;\r\n    hardware_wallet: boolean;\r\n    proof_type: string;\r\n    org_structure: string;\r\n    hash_algorithm: string;\r\n    first_data_at: string;\r\n    last_data_at: string;\r\n}\r\n\r\ninterface PriceData {\r\n    id: string;\r\n    name: string;\r\n    symbol: string;\r\n    rank: number;\r\n    circulating_supply: number;\r\n    total_supply: number;\r\n    max_supply: number;\r\n    beta_value: number;\r\n    first_data_at: string;\r\n    last_updated: string;\r\n    quotes: {\r\n        USD: {\r\n            ath_date: string;\r\n            ath_price: number;\r\n            market_cap: number;\r\n            market_cap_change_24h: number;\r\n            percent_change_1h: number;\r\n            percent_change_1y: number;\r\n            percent_change_6h: number;\r\n            percent_change_7d: number;\r\n            percent_change_12h: number;\r\n            percent_change_15m: number;\r\n            percent_change_24h: number;\r\n            percent_change_30d: number;\r\n            percent_change_30m: number;\r\n            percent_from_price_ath: number;\r\n            price: number;\r\n            volume_24h: number;\r\n            volume_24h_change_24h: number;\r\n        };\r\n    };\r\n}\r\n\r\nfunction Coin() {\r\n    const { coinId } = useParams<Params>()\r\n    const { state } = useLocation<toState>();\r\n    const chartMatch = useRouteMatch(\"/:coinId/Chart\")\r\n    const priceMatch = useRouteMatch(\"/:coinId/Price\")\r\n\r\n    const { isLoading: CoinInfoLoading, data: CoinInfoData } = useQuery<InfoData>([\"CoinInfo\", coinId], () => CoinInfo(coinId))\r\n    const { isLoading: CoinPriceLoading, data: CoinPriceData } = useQuery<PriceData>([\"CoinPrice\", coinId], () => CoinPrice(coinId), {\r\n        refetchInterval: 1000\r\n    })\r\n\r\n    const Loading = CoinInfoLoading || CoinPriceLoading\r\n\r\n    return (\r\n        <Container>\r\n            <Helmet>\r\n                <title>{CoinInfoData?.name}</title>\r\n            </Helmet>\r\n            <Header>\r\n                <Title>{state?.name ? state.name : Loading ? \"Loading...\" : CoinInfoData?.name}</Title>\r\n            </Header>\r\n            <Main>\r\n                <Overview>\r\n                    <OverviewItem2><span>{CoinInfoData?.name} Information</span></OverviewItem2>\r\n                    <OverviewItem2>\r\n                        <Link to={\"/\"}>Home</Link>\r\n                    </OverviewItem2>\r\n                </Overview>\r\n                <Overview>\r\n                    <OverviewItem>\r\n                        <span>Rank</span>\r\n                        <span>{CoinInfoData?.rank}</span>\r\n                    </OverviewItem>\r\n                    <OverviewItem>\r\n                        <span>Symbol</span>\r\n                        <span>${CoinInfoData?.symbol}</span>\r\n                    </OverviewItem>\r\n                    <OverviewItem>\r\n                        <span>Price</span>\r\n                        <span>{CoinPriceData?.quotes.USD.price}</span>\r\n                    </OverviewItem>\r\n                </Overview>\r\n                <Description>{CoinInfoData?.description}</Description>\r\n                <Overview>\r\n                    <OverviewItem>\r\n                        <span>Total Suply</span>\r\n                        <span>{CoinPriceData?.total_supply}</span>\r\n                    </OverviewItem>\r\n                    <OverviewItem>\r\n                        <span>Max Supply</span>\r\n                        <span>{CoinPriceData?.max_supply}</span>\r\n                    </OverviewItem>\r\n                </Overview>\r\n                <Tabs>\r\n                    <Tab isActive={chartMatch !== null}>\r\n                        <Link to={`/${coinId}/chart`}>Chart</Link>\r\n                    </Tab>\r\n                    <Tab isActive={priceMatch !== null}>\r\n                        <Link to={`/${coinId}/price`}>Price</Link>\r\n                    </Tab>\r\n                </Tabs>\r\n                <RestedR>\r\n                    <Switch>\r\n                        <Route path={\"/:coinId/Chart\"}>\r\n                            <Chart coinId={coinId} />\r\n                        </Route>\r\n                        <Route path={\"/:coinId/Price\"}>\r\n                            <Price coinId={coinId} />\r\n                        </Route>\r\n                    </Switch>\r\n                </RestedR>\r\n            </Main>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Coin","import styled from \"styled-components\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useQuery } from \"react-query\"\r\nimport { CoinFetcher } from \"../api\"\r\nimport { Helmet } from \"react-helmet\"\r\n\r\nconst Title = styled.h1`\r\n    display: inline;\r\n    color: ${props => props.theme.accentrColor};\r\n    font-weight: bold;\r\n    font-size: calc(1vw + 1.5em);\r\n`\r\n\r\nconst Container = styled.div`\r\n\r\n`\r\nconst Header = styled.header`\r\n    width: 100%;\r\n    height: calc(1vw + 2.6em);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background: ${props => props.theme.textColor};\r\n    box-shadow: 0px -10px 30px ${props => props.theme.textColor};\r\n    color: black;\r\n`\r\nconst Main = styled.main`\r\n    max-width: 600px;\r\n    margin 0 auto;\r\n    width: 100%;\r\n    padding: 20px 0px;\r\n`\r\nconst CoinList = styled.ul`\r\n    width: 100%;\r\n`\r\nconst Coin = styled.li`\r\n    display; blcok;\r\n    padding: 20px;\r\n    border-radius: 10px;\r\n    margin: 20px 20px;\r\n    background: white;\r\n    a{\r\n        display: flex;\r\n        align-items: center;\r\n        font-weight: bold;\r\n        font-size: calc(1vw + .75em);\r\n        transition: all .25s;\r\n        &:hover{\r\n            color: ${props => props.theme.accentrColor} \r\n        }\r\n        img{\r\n            margin-right: 16px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst IMG = styled.img`\r\n    width: 34px;\r\n    height: 34px;\r\n`\r\n\r\nconst Load = styled.div`\r\n    position: fixed;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    font-weight: bold;\r\n    font-size: calc(1vw + 4em);\r\n    text-align: center;\r\n`\r\n\r\ninterface ICoin {\r\n    id: string;\r\n    is_active: boolean;\r\n    is_new: boolean;\r\n    name: string;\r\n    rank: number;\r\n    symbol: string;\r\n    type: string;\r\n}\r\n\r\n\r\nfunction Coins() {\r\n    const { isLoading, data } = useQuery<ICoin[]>(\"FCoins\", CoinFetcher)\r\n    console.log(data)\r\n\r\n    return (\r\n        <Container>\r\n            <Helmet>\r\n                <title>다운비트</title>\r\n            </Helmet>\r\n            <Header>\r\n                <Title>다운비트</Title>\r\n            </Header>\r\n            <Main>\r\n                {isLoading ? <Load>Loading...</Load> : <CoinList>\r\n                    {data?.slice(0, 100).map(item => <Coin key={item.id}>\r\n                        <Link to={{\r\n                            pathname: `/${item.id}`,\r\n                            state: { name: item.name }\r\n                        }}>\r\n                            <IMG src={`https://cryptoicon-api.vercel.app/api/icon/${item.symbol.toLowerCase()}`} />\r\n                            {item.name} &rarr;</Link >\r\n                    </Coin>)}\r\n                </CoinList>}\r\n            </Main>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Coins","import { BrowserRouter, Switch, Route } from \"react-router-dom\"\r\nimport Coin from './coin'\r\nimport Coins from './coins'\r\n\r\nfunction Router() {\r\n    return (\r\n        <BrowserRouter basename=\"/react-masterclass\">\r\n            <Switch>\r\n                <Route path=\"/:coinId\">\r\n                    <Coin />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <Coins />\r\n                </Route>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Router","import Router from \"./routes/Router\";\nimport { createGlobalStyle } from \"styled-components\"\nimport { ReactQueryDevtools } from 'react-query/devtools'\n\nconst Global = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\n\n/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\npadding: 0;\nborder: 0;\nfont - size: 100 %;\nfont: inherit;\nvertical - align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\n  footer, header, hgroup, menu, nav, section {\n  display: block;\n}\nbody {\n  line - height: 1;\n}\nol, ul {\n  list - style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote: before, blockquote: after,\n  q: before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border - collapse: collapse;\n  border - spacing: 0;\n}\n*{\n  margin: 0px;\n  padding: 0px;\n  list-style: none;\n  text-decoration: none;\n  box-style: border;\n  ::-webkit-scrollbar{\n      display: none;\n  }\n}\nbody{\n  font-family: 'Source Sans Pro', sans-serif;\n  background: ${props => props.theme.backgroundColor};\n  color: ${props => props.theme.textColor};\n  overflow-x: hidden;\n}\na{\n  color: black;\n}\n`\n\nfunction App() {\n  return (\n    <>\n      <Global />\n      <Router />\n      <ReactQueryDevtools initialIsOpen={true} />\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ThemeProvider } from 'styled-components'\nimport { theme } from './theme';\nimport { QueryClientProvider, QueryClient } from \"react-query\"\n\nconst queryClient = new QueryClient()\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <QueryClientProvider client={queryClient}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </QueryClientProvider>\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n","import { DefaultTheme } from 'styled-components';\r\n\r\nexport const theme: DefaultTheme = {\r\n    textColor: \"#f5f6fa\",\r\n    backgroundColor: \"#2f3640\",\r\n    accentrColor: \"#487eb0\",\r\n    blockColor: \"rgba(0, 0, 0, .5)\",\r\n}"],"sourceRoot":""}
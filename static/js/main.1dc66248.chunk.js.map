{"version":3,"sources":["api.ts","routes/chart.tsx","routes/price.tsx","routes/coin.tsx","routes/coins.tsx","routes/Router.tsx","App.tsx","index.tsx","theme.tsx"],"names":["COMMON_URL","CoinFetcher","fetch","then","response","json","Chart","coinId","data","useQuery","CoinID","end","Math","floor","Date","now","start","res","CoinChart","map","item","close","Price","Title","styled","h1","props","theme","accentrColor","Container","div","Header","header","Main","main","Overview","blockColor","OverviewItem","Description","p","Tabs","Tab","span","isActive","textColor","RestedR","Coin","useParams","state","useLocation","chartMatch","useRouteMatch","priceMatch","CoinInfoLoading","isLoading","CoinInfoData","CoinPriceLoading","CoinPriceData","Loading","name","rank","symbol","open_source","description","total_supply","max_supply","to","path","CoinList","ul","li","IMG","img","Load","Coins","console","log","slice","pathname","id","src","toLowerCase","Router","basename","Global","createGlobalStyle","backgroundColor","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","client","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1dc66248.chunk.js","sourcesContent":["const COMMON_URL = \"https://api.coinpaprika.com/v1/\"\r\n\r\nexport function CoinFetcher() {\r\n    return fetch(`${COMMON_URL}coins`).then((response) =>\r\n        response.json()\r\n    );\r\n}\r\n\r\nexport function CoinInfo(CoinID: string) {\r\n    return fetch(`${COMMON_URL}coins/${CoinID}`).then((res) => {\r\n        return res.json()\r\n    })\r\n}\r\n\r\nexport function CoinPrice(CoinID: string) {\r\n    return fetch(`${COMMON_URL}tickers/${CoinID}`).then((res) => {\r\n        return res.json()\r\n    })\r\n}\r\n\r\nexport function CoinChart(CoinID: string) {\r\n\r\n    const end = Math.floor(Date.now() / 1000)\r\n    const start = end - 69 * 60 * 24 * 6 * 2\r\n\r\n    return fetch(`${COMMON_URL}coins/${CoinID}/ohlcv/historical?start=${start}&end=${end}`).then((res) => {\r\n        return res.json()\r\n    })\r\n}","import { CoinChart } from \"../api\";\r\nimport { useQuery } from \"react-query\";\r\n\r\ninterface IChart {\r\n    coinId: string;\r\n}\r\n\r\ninterface IHistorical {\r\n    time_open: string;\r\n    time_close: string;\r\n    open: number;\r\n    high: number;\r\n    low: number;\r\n    close: number;\r\n    volume: number;\r\n    market_cap: number;\r\n}\r\n\r\nfunction Chart({ coinId }: IChart) {\r\n    const { data } = useQuery<IHistorical[]>([\"CoinChart\", coinId], () =>\r\n        CoinChart(coinId)\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {data?.map(item => item.close)}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Chart","\r\nfunction Price() {\r\n    return (\r\n        <h1>Price</h1>\r\n    )\r\n}\r\n\r\nexport default Price","import styled from \"styled-components\"\r\nimport { useLocation, useParams, useRouteMatch } from \"react-router\"\r\nimport { Switch, Route, Link } from 'react-router-dom';\r\nimport Chart from \"./chart\";\r\nimport Price from \"./price\";\r\nimport { CoinInfo, CoinPrice } from \"../api\";\r\nimport { useQuery } from \"react-query\";\r\n\r\n\r\nconst Title = styled.h1`\r\n    display: inline;\r\n    color: ${props => props.theme.accentrColor};\r\n    font-weight: bold;\r\n    font-size: calc(1vw + 1.5em);\r\n`\r\nconst Container = styled.div`\r\n`\r\nconst Header = styled.header`\r\n    width: 100%;\r\n    height: calc(1vw + 2.6em);\r\n    display: flex;\r\n    justify-content: center;\r\n    alignitem-: center;\r\n    background-color: white;\r\n    color: black;\r\n`\r\nconst Main = styled.main`\r\n    max-width: 600px;\r\n    margin 0 auto;\r\n    width: 100%;\r\n    padding: 20px 0px;\r\n`\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: ${props => props.theme.blockColor};\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n  margin: 20px;\r\n`;\r\n\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst Description = styled.p`\r\n  margin: 20px;\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 20px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: calc(1vw + .5em);\r\n  font-weight: 400;\r\n  background-color: ${props => props.theme.blockColor};\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  font-weight: bold;\r\n  a {\r\n    display: block;\r\n    color: ${props => props.isActive ? props.theme.accentrColor : props.theme.textColor}\r\n}\r\n`;\r\n\r\nconst RestedR = styled.div`\r\n  margin: 20px\r\n`\r\ninterface Params {\r\n    coinId: string\r\n}\r\n\r\ninterface toState {\r\n    name: string\r\n}\r\n\r\ninterface InfoData {\r\n    id: string;\r\n    name: string;\r\n    symbol: string;\r\n    rank: number;\r\n    is_new: boolean;\r\n    is_active: boolean;\r\n    type: string;\r\n    description: string;\r\n    message: string;\r\n    open_source: boolean;\r\n    started_at: string;\r\n    development_status: string;\r\n    hardware_wallet: boolean;\r\n    proof_type: string;\r\n    org_structure: string;\r\n    hash_algorithm: string;\r\n    first_data_at: string;\r\n    last_data_at: string;\r\n}\r\n\r\ninterface PriceData {\r\n    id: string;\r\n    name: string;\r\n    symbol: string;\r\n    rank: number;\r\n    circulating_supply: number;\r\n    total_supply: number;\r\n    max_supply: number;\r\n    beta_value: number;\r\n    first_data_at: string;\r\n    last_updated: string;\r\n    quotes: {\r\n        USD: {\r\n            ath_date: string;\r\n            ath_price: number;\r\n            market_cap: number;\r\n            market_cap_change_24h: number;\r\n            percent_change_1h: number;\r\n            percent_change_1y: number;\r\n            percent_change_6h: number;\r\n            percent_change_7d: number;\r\n            percent_change_12h: number;\r\n            percent_change_15m: number;\r\n            percent_change_24h: number;\r\n            percent_change_30d: number;\r\n            percent_change_30m: number;\r\n            percent_from_price_ath: number;\r\n            price: number;\r\n            volume_24h: number;\r\n            volume_24h_change_24h: number;\r\n        };\r\n    };\r\n}\r\n\r\nfunction Coin() {\r\n    const { coinId } = useParams<Params>()\r\n    const { state } = useLocation<toState>();\r\n    const chartMatch = useRouteMatch(\"/:coinId/Chart\")\r\n    const priceMatch = useRouteMatch(\"/:coinId/Price\")\r\n\r\n    const { isLoading: CoinInfoLoading, data: CoinInfoData } = useQuery<InfoData>([\"CoinInfo\", coinId], () => CoinInfo(coinId))\r\n    const { isLoading: CoinPriceLoading, data: CoinPriceData } = useQuery<PriceData>([\"CoinPrice\", coinId], () => CoinPrice(coinId))\r\n\r\n    const Loading = CoinInfoLoading || CoinPriceLoading\r\n\r\n    return (\r\n        <Container>\r\n            <Header>\r\n                <Title>{state?.name ? state.name : Loading ? \"Loading...\" : CoinInfoData?.name}</Title>\r\n            </Header>\r\n            <Main>\r\n                <Overview>\r\n                    <OverviewItem>\r\n                        <span>Rank:</span>\r\n                        <span>{CoinInfoData?.rank}</span>\r\n                    </OverviewItem>\r\n                    <OverviewItem>\r\n                        <span>Symbol:</span>\r\n                        <span>${CoinInfoData?.symbol}</span>\r\n                    </OverviewItem>\r\n                    <OverviewItem>\r\n                        <span>Open Source:</span>\r\n                        <span>{CoinInfoData?.open_source ? \"Yes\" : \"No\"}</span>\r\n                    </OverviewItem>\r\n                </Overview>\r\n                <Description>{CoinInfoData?.description}</Description>\r\n                <Overview>\r\n                    <OverviewItem>\r\n                        <span>Total Suply:</span>\r\n                        <span>{CoinPriceData?.total_supply}</span>\r\n                    </OverviewItem>\r\n                    <OverviewItem>\r\n                        <span>Max Supply:</span>\r\n                        <span>{CoinPriceData?.max_supply}</span>\r\n                    </OverviewItem>\r\n                </Overview>\r\n                <Tabs>\r\n                    <Tab isActive={chartMatch !== null}>\r\n                        <Link to={`/${coinId}/chart`}>Chart</Link>\r\n                    </Tab>\r\n                    <Tab isActive={priceMatch !== null}>\r\n                        <Link to={`/${coinId}/price`}>Price</Link>\r\n                    </Tab>\r\n                </Tabs>\r\n                <RestedR>\r\n                    <Switch>\r\n                        <Route path={\"/:coinId/Chart\"}>\r\n                            <Chart coinId={coinId} />\r\n                        </Route>\r\n                        <Route path={\"/:coinId/Price\"}>\r\n                            <Price />\r\n                        </Route>\r\n                    </Switch>\r\n                </RestedR>\r\n            </Main>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Coin","import styled from \"styled-components\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useQuery } from \"react-query\"\r\nimport { CoinFetcher } from \"../api\"\r\n\r\nconst Title = styled.h1`\r\n    display: inline;\r\n    color: ${props => props.theme.accentrColor};\r\n    font-weight: bold;\r\n    font-size: calc(1vw + 1.5em);\r\n`\r\n\r\nconst Container = styled.div`\r\n\r\n`\r\nconst Header = styled.header`\r\n    width: 100%;\r\n    height: calc(1vw + 2.6em);\r\n    display: flex;\r\n    justify-content: center;\r\n    alignitem-: center;\r\n    background-color: white;\r\n    color: black;\r\n`\r\nconst Main = styled.main`\r\n    max-width: 600px;\r\n    margin 0 auto;\r\n    width: 100%;\r\n    padding: 20px 0px\r\n`\r\nconst CoinList = styled.ul`\r\n    width: 100%;\r\n`\r\nconst Coin = styled.li`\r\n    display; blcok;\r\n    padding: 20px;\r\n    border-radius: 10px;\r\n    margin: 20px 20px;\r\n    background: white;\r\n    a{\r\n        display: flex;\r\n        align-items: center;\r\n        font-weight: bold;\r\n        font-size: calc(1vw + .75em);\r\n        &:hover{\r\n            color: ${props => props.theme.accentrColor} \r\n        }\r\n        img{\r\n            margin-right: 16px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst IMG = styled.img`\r\n    width: 25px;\r\n    height: 25px;\r\n`\r\n\r\nconst Load = styled.div`\r\n    position: fixed;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    font-weight: bold;\r\n    font-size: calc(1vw + 4em);\r\n    text-align: center;\r\n`\r\n\r\ninterface ICoin {\r\n    id: string;\r\n    is_active: boolean;\r\n    is_new: boolean;\r\n    name: string;\r\n    rank: number;\r\n    symbol: string;\r\n    type: string;\r\n}\r\n\r\n\r\nfunction Coins() {\r\n    const { isLoading, data } = useQuery<ICoin[]>(\"FCoins\", CoinFetcher)\r\n    console.log(data)\r\n\r\n    return (\r\n        <Container>\r\n            <Header>\r\n                <Title>Coins</Title>\r\n            </Header>\r\n            <Main>\r\n                {isLoading ? <Load>Loading...</Load> : <CoinList>\r\n                    {data?.slice(0, 10).map(item => <Coin key={item.id}>\r\n                        <Link to={{\r\n                            pathname: `/${item.id}`,\r\n                            state: { name: item.name }\r\n                        }}>\r\n                            <IMG src={`https://cryptoicon-api.vercel.app/api/icon/${item.symbol.toLowerCase()}`} />\r\n                            {item.name} &rarr;</Link >\r\n                    </Coin>)}\r\n                </CoinList>}\r\n            </Main>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Coins","import { BrowserRouter, Switch, Route } from \"react-router-dom\"\r\nimport Coin from './coin'\r\nimport Coins from './coins'\r\n\r\nfunction Router() {\r\n    return (\r\n        <BrowserRouter basename=\"/react-masterclass\">\r\n            <Switch>\r\n                <Route path=\"/:coinId\">\r\n                    <Coin />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <Coins />\r\n                </Route>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Router","import Router from \"./routes/Router\";\nimport { createGlobalStyle } from \"styled-components\"\nimport { ReactQueryDevtools } from 'react-query/devtools'\n\nconst Global = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\n\n/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\npadding: 0;\nborder: 0;\nfont - size: 100 %;\nfont: inherit;\nvertical - align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\n  footer, header, hgroup, menu, nav, section {\n  display: block;\n}\nbody {\n  line - height: 1;\n}\nol, ul {\n  list - style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote: before, blockquote: after,\n  q: before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border - collapse: collapse;\n  border - spacing: 0;\n}\n*{\n  margin: 0px;\n  padding: 0px;\n  list-style: none;\n  text-decoration: none;\n  box-style: border;\n}\nbody{\n  font-family: 'Source Sans Pro', sans-serif;\n  background: ${props => props.theme.backgroundColor};\n  color: ${props => props.theme.textColor};\n  overflow-x: hidden;\n}\na{\n  color: black;\n}\n`\n\nfunction App() {\n  return (\n    <>\n      <Global />\n      <Router />\n      <ReactQueryDevtools initialIsOpen={true} />\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ThemeProvider } from 'styled-components'\nimport { theme } from './theme';\nimport { QueryClientProvider, QueryClient } from \"react-query\"\n\nconst queryClient = new QueryClient()\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <QueryClientProvider client={queryClient}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </QueryClientProvider>\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n","import { DefaultTheme } from 'styled-components';\r\n\r\nexport const theme: DefaultTheme = {\r\n    textColor: \"#f5f6fa\",\r\n    backgroundColor: \"#2f3640\",\r\n    accentrColor: \"#487eb0\",\r\n    blockColor: \"rgba(0, 0, 0, .5)\",\r\n}"],"sourceRoot":""}